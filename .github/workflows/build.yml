name: CI

on:
  push:
    branches: [develop, master]
jobs:
  build:
    runs-on: ubuntu-20.04
    if: github.repository == 'falgon/roki-web'
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: true
    - name: Setup Haskell
      uses: haskell/actions/setup@v1
      with:
        ghc-version: '8.8.3'
        enable-stack: true
        stack-version: '2.7.3'
    - name: Cache
      uses: actions/cache@v2
      id: stack-cache
      with:
        path: ~/.stack
        key: stack-v2-${{ runner.os }}-${{ hashFiles('stack.yaml') }}
    - name: Setup Tools
      run: |
        sudo apt-get -qq -o=Dpkg::Use-Pty=0 update
        sudo apt-get -qq -o=Dpkg::Use-Pty=0 install -y --no-install-recommends libxml2-utils
        xmllint --version
    - name: Setup Stack
      if: steps.stack-cache.outputs.cache-hit != 'true'
      run: |
        stack config set system-ghc --global true
        stack config set install-ghc --global false
    - name: Read Node version
      uses: browniebroke/read-nvmrc-action@v1
      id: nvmrc
    - name: Setup Node
      uses: actions/setup-node@v2
      with:
        node-version: '${{ steps.nvmrc.outputs.node_version }}'
    - name: Install dependencies and build the roki.dev generator
      run: |
        stack --local-bin-path . install --flag hakyll:-previewServer --flag hakyll:-watchServer
        ./site --version
        npm ci
    - name: Build and validate roki.dev
      if: github.ref == 'refs/heads/master'
      run: |
        ./site build
        ./site check --internal-links
        xmllint docs/roki.log/sitemap.xml --noout
        xmllint docs/roki.log/feed/roki.log.xml --noout
        xmllint docs/roki.log/feed/roki.log-rss.xml --noout
        xmllint docs/roki.diary/sitemap.xml --noout
        xmllint docs/roki.diary/feed/roki.diary.xml --noout
        xmllint docs/roki.diary/feed/roki.diary-rss.xml --noout
        tar cvf docs.tar.xz docs
    - name: Build and validate roki.dev (fast build)
      if: github.ref == 'refs/heads/develop'
      run: |
        ./site build --preview
        ./site check --internal-links
        xmllint docs/roki.log/sitemap.xml --noout
        xmllint docs/roki.log/feed/roki.log.xml --noout
        xmllint docs/roki.diary/sitemap.xml --noout
        xmllint docs/roki.diary/feed/roki.diary.xml --noout
    - name: Upload artifact
      if: github.ref == 'refs/heads/master'
      uses: actions/upload-artifact@v2
      with:
        name: roki.dev
        path: docs.tar.xz
  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/master' && github.repository == 'falgon/roki-web'
    steps:
    - name: Fetch archive
      uses: actions/download-artifact@v2
      with:
        name: roki.dev
    - name: Unarchive docs
      run: tar xvf docs.tar.xz
    - name: Deploy
      uses: peaceiris/actions-gh-pages@v3
      with:
        deploy_key: ${{ secrets.ACTIONS_DEPLOY_KEY }}
        publish_dir: ./docs
  page-insight:
    runs-on: ubuntu-latest
    needs: deploy
    if: github.repository == 'falgon/roki-web'
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: false
    - name: Polling until deployed
      env:
        POLLING_MAX: 10
        POLLING_DURATION_MILLISECONDS: 5000
      uses: actions/github-script@v2
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        result-encoding: string
        script: |
          let c = 0;
          let res = false;
          const it = setInterval(async () => {
            const r = await github.repos.getLatestPagesBuild({
              owner: context.repo.owner,
              repo: context.repo.repo
            });
            if (r.data.status === "built") {
              res = true;
              clearInterval(it);
            } else if (c > ${{ env.POLLING_MAX }}) {
              res = false;
              clearInterval(it);
            }
            ++c;
          }, ${{ env.POLLING_DURATION_MILLISECONDS }});
          return res.toString();
    - name: Get page insights
      if: ${{ steps.set-result.outputs.result }} == "true"
      env:
        SP_THRESHOLD: 65
        PC_THRESHOLD: 90
        LOCALE: ja_JP
      run: |
        npm ci
        npx psi https://$(cat CNAME) --strategy=mobile --locale=${{ env.LOCALE }} --threshold=${{ env.SP_THRESHOLD }} 2>&1 || true
        npx psi https://$(cat CNAME) --strategy=desktop --locale=${{ env.LOCALE }} --threshold=${{ env.PC_THRESHOLD }} 2>&1 || true
