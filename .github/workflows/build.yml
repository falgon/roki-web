name: CI

on:
  push:
    branches:
        - develop
        - master
  pull_request:
    branches:
        - develop
        - master
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
          submodules: true
    - uses: actions/setup-haskell@v1.1.2
      with:
        ghc-version: '8.8.3'
        enable-stack: latest
    - uses: actions/setup-node@v1
      with:
          node-version: '14'
    - name: Cache
      uses: actions/cache@v2
      id: stack-cache
      with:
          path: ~/.stack
          key: stack-v2-${{ runner.os }}-${{ hashFiles('stack.yaml') }}
    - name: Setup Tools
      run: sudo apt-get install -y libxml2-utils
    - name: Setup Stack
      if: steps.stack-cache.outputs.cache-hit != 'true'
      run: |
        stack config set system-ghc --global true
        stack config set install-ghc --global false
    - name: Install dependencies and build the roki.dev generator
      run: |
        stack --local-bin-path . install --flag hakyll:-previewServer --flag hakyll:-watchServer
        ./site --version
        npm ci
    - name: Build and validate roki.dev
      if: github.ref == 'refs/heads/master'
      run: |
        ./site build
        ./site check --internal-links
        xmllint docs/roki.log/sitemap.xml --noout
        xmllint docs/roki.log/feed/roki.log.xml --noout
        xmllint docs/roki.diary/sitemap.xml --noout
        xmllint docs/roki.diary/feed/roki.diary.xml --noout
        tar cvf docs.tar.xz docs
    - name: Build and validate roki.dev (fast build)
      if: github.ref == 'refs/heads/develop' || github.ref == 'refs/pull/49/merge'
      run: |
        ./site build --preview
        ./site check --internal-links
        xmllint docs/roki.log/sitemap.xml --noout
        xmllint docs/roki.log/feed/roki.log.xml --noout
        xmllint docs/roki.diary/sitemap.xml --noout
        xmllint docs/roki.diary/feed/roki.diary.xml --noout
    - name: Upload artifact
      if: github.ref == 'refs/heads/master'
      uses: actions/upload-artifact@v2
      with:
          name: roki.dev
          path: docs.tar.xz
  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    steps:
    - name: Fetch archive
      uses: actions/download-artifact@v2
      with:
        name: roki.dev
    - name: Unarchive docs
      run: tar xvf docs.tar.xz
    - name: Deploy
      uses: peaceiris/actions-gh-pages@v3
      with:
        deploy_key: ${{ secrets.ACTIONS_DEPLOY_KEY }}
        publish_dir: ./docs
