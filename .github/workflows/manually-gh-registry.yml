name: manually-gh-registry
on:
  workflow_dispatch:
    inputs:
      to_push:
        description: 'Push the built containers'
        required: true
        default: false
        type: boolean
      enable_notify:
        description: 'Send notification after image build'
        required: true
        default: true
        type: boolean
  push:
    branches: [master]
    tags:
      - v*
env:
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1
jobs:
  setup:
    runs-on: ubuntu-24.04
    if: github.repository == 'falgon/roki-web'
    outputs:
      img_tag: ${{ steps.img_tag_step.outputs.name }}
      env_img_name: ${{ steps.env_img_step.outputs.name }}
      dev_img_name: ${{ steps.dev_img_step.outputs.name }}
      env_gh_registry: ${{ steps.env_registry_step.outputs.name }}
      dev_gh_registry: ${{ steps.dev_registry_step.outputs.name }}
      to_push: ${{ steps.to_push_step.outputs.flag }}
      enable_notify: ${{ steps.enable_notify_step.outputs.flag }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: true
    - name: Setup environment variables
      run: |
        ENV_IMAGE_NAME=$(cat ./docker/.env | grep ROKI_WEB_ENV_IMAGE_NAME | cut -f2 -d=)
        DEV_IMAGE_NAME=$(cat ./docker/.env | grep ROKI_WEB_DEV_IMAGE_NAME | cut -f2 -d=)
        echo "ENV_IMAGE_NAME=$ENV_IMAGE_NAME" >> $GITHUB_ENV
        echo "DEV_IMAGE_NAME=$DEV_IMAGE_NAME" >> $GITHUB_ENV
        VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
        [[ "${{ github.ref }}" = "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
        IMAGE_TAG=$(test $VERSION = master && echo latest || echo $VERSION)
        echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
        echo "ENV_GH_REGISTRY=docker.pkg.github.com/${{ github.repository }}/$(echo $ENV_IMAGE_NAME | cut -f2 -d/):$IMAGE_TAG" >> $GITHUB_ENV
        echo "DEV_GH_REGISTRY=docker.pkg.github.com/${{ github.repository }}/$(echo $DEV_IMAGE_NAME | cut -f2 -d/):$IMAGE_TAG" >> $GITHUB_ENV
        [[ "${{ github.event_name }}" = "push" ]] && TO_PUSH=true || TO_PUSH=${{ github.event.inputs.to_push }}
        echo "TO_PUSH=$TO_PUSH" >> $GITHUB_ENV
        [[ "${{ github.event_name }}" = "push" ]] && ENABLE_NOTIFY=false || ENABLE_NOTIFY=${{ github.event.inputs.enable_notify }}
        echo "ENABLE_NOTIFY=$ENABLE_NOTIFY" >> $GITHUB_ENV
    - name: Set the image tag outputs
      id: img_tag_step
      run: echo "name=$IMAGE_TAG" >> $GITHUB_OUTPUT
    - name: Set env image outputs
      if: ${{ env.TO_PUSH == 'true' }}
      id: env_img_step
      run: echo "name=$ENV_IMAGE_NAME" >> $GITHUB_OUTPUT
    - name: Set dev image outputs
      if: ${{ env.TO_PUSH == 'true' }}
      id: dev_img_step
      run: echo "name=$DEV_IMAGE_NAME" >> $GITHUB_OUTPUT
    - name: Set env registry outputs
      if: ${{ env.TO_PUSH == 'true' }}
      id: env_registry_step
      run: echo "name=$ENV_GH_REGISTRY" >> $GITHUB_OUTPUT
    - name: Set dev registry outputs
      if: ${{ env.TO_PUSH == 'true' }}
      id: dev_registry_step
      run: echo "name=$DEV_GH_REGISTRY" >> $GITHUB_OUTPUT
    - name: Set to_push flag outputs
      id: to_push_step
      run: echo "flag=$TO_PUSH" >> $GITHUB_OUTPUT
    - name: Set enable_notify flag outputs
      id: enable_notify_step
      run: echo "flag=$ENABLE_NOTIFY" >> $GITHUB_OUTPUT
  build-env-image:
    runs-on: ubuntu-24.04
    needs: setup
    if: github.repository == 'falgon/roki-web'
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: true
    - name: Adjustment docker volumes
      run: |
        docker system prune -a --volumes -f
        sudo rm -rf "/usr/local/share/boost" "$AGENT_TOOLSDIRECTORY"
        sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc
        df -h
    - name: Build the env image
      shell: bash
      run: |
        export ROKI_WEB_ENV_IMAGE_TAG="${{ needs.setup.outputs.img_tag }}"
        export ROKI_WEB_DEV_IMAGE_TAG="${{ needs.setup.outputs.img_tag }}"
        cd ./docker
        docker compose build --no-cache preview
    - name: Save images with tar
      if: ${{ needs.setup.outputs.to_push == 'true' }}
      run: docker save ${{ needs.setup.outputs.env_img_name }} | gzip -c > /tmp/env_img.tar.gz
    - name: Upload the env image
      if: ${{ needs.setup.outputs.to_push == 'true' }}
      uses: actions/upload-artifact@v4
      with:
        name: env_img
        path: /tmp/env_img.tar.gz
  build-dev-image:
    runs-on: ubuntu-24.04
    needs: setup
    if: github.repository == 'falgon/roki-web'
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: true
    - name: Adjustment docker volumes
      run: |
        docker system prune -a --volumes -f
        sudo rm -rfv "/usr/local/share/boost" "$AGENT_TOOLSDIRECTORY"
    - name: Build the dev image
      shell: bash
      run: |
        export ROKI_WEB_ENV_IMAGE_TAG="${{ needs.setup.outputs.img_tag }}"
        export ROKI_WEB_DEV_IMAGE_TAG="${{ needs.setup.outputs.img_tag }}"
        cd ./docker
        docker compose build --no-cache dev
    - name: Save images with tar
      if: ${{ needs.setup.outputs.to_push == 'true' }}
      run: docker save ${{ needs.setup.outputs.dev_img_name }} | gzip -c > /tmp/dev_img.tar.gz
    - name: Upload the dev image
      if: ${{ needs.setup.outputs.to_push == 'true' }}
      uses: actions/upload-artifact@v4
      with:
        name: dev_img
        path: /tmp/dev_img.tar.gz
  notify-email:
    runs-on: ubuntu-24.04
    needs: [setup, build-env-image, build-dev-image]
    if: ${{ needs.setup.outputs.enable_notify == 'true' && github.repository == 'falgon/roki-web' }}
    environment:
      name: manually-gh-registry
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        sparse-checkout: |
          tools/github-actions
    - name: Setup Haskell
      uses: haskell-actions/setup@v2
      with:
        enable-stack: true
        stack-version: 'latest'
    - name: Cache Stack dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.stack
          ~/.stack-work
          tools/github-actions/.stack-work
        key: ${{ runner.os }}-stack-notify-v2-${{ hashFiles('tools/github-actions/NotifyBuildCompletion.hs') }}
        restore-keys: |
          ${{ runner.os }}-stack-notify-v2-
          ${{ runner.os }}-stack-
    - name: Cache Stack package index
      uses: actions/cache@v4
      with:
        path: ~/.stack/pantry
        key: ${{ runner.os }}-stack-pantry-v2-${{ hashFiles('tools/github-actions/NotifyBuildCompletion.hs') }}
        restore-keys: |
          ${{ runner.os }}-stack-pantry-v2-
    - name: Install dependencies
      run: |
        # Extract packages from the script header
        PACKAGES=$(grep -o "package [a-z-]*" tools/github-actions/NotifyBuildCompletion.hs | sed 's/package //' | tr '\n' ' ')
        # Pre-install packages to populate cache
        stack --resolver lts-22.33 build $PACKAGES --only-dependencies
    - name: Send Email Notification
      env:
        GMAIL_SENDER: ${{ secrets.GMAIL_SENDER }}
        GMAIL_APP_PASSWORD: ${{ secrets.GMAIL_APP_PASSWORD }}
        NOTIFICATION_TO_EMAIL: ${{ secrets.NOTIFICATION_TO_EMAIL }}
      run: |
        stack tools/github-actions/NotifyBuildCompletion.hs \
          --repository "${{ github.repository }}" \
          --image-tag "${{ needs.setup.outputs.img_tag }}" \
          --run-id "${{ github.run_id }}" \
          --actions-url "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
  push:
    runs-on: ubuntu-24.04
    needs: [setup, build-env-image, build-dev-image]
    if: ${{ needs.setup.outputs.to_push == 'true' && github.repository == 'falgon/roki-web' }}
    steps:
    - name: Adjustment docker volumes
      run: |
        docker system prune -a --volumes -f
        sudo rm -rfv "/usr/local/share/boost" "$AGENT_TOOLSDIRECTORY"
    - name: Install tools
      uses: awalsh128/cache-apt-pkgs-action@v1
      with:
        packages: parallel
        version: 1.0
    - name: Download the env image
      uses: actions/download-artifact@v4
      with:
        name: env_img
        path: /tmp
    - name: Download the dev image
      uses: actions/download-artifact@v4
      with:
        name: dev_img
        path: /tmp
    - name: Load images
      shell: bash
      run: |
        parallel 'cat /tmp/{}_img.tar.gz | gzip -d | docker load' ::: env dev
    - name: Login GitHub Registry
      run: echo ${{ secrets.GITHUB_TOKEN }} | docker login docker.pkg.github.com -u owner --password-stdin
    - name: Push to GitHub Package Registry
      shell: bash
      run: |
        docker tag ${{ needs.setup.outputs.env_img_name }}:${{ needs.setup.outputs.img_tag }} ${{ needs.setup.outputs.env_gh_registry }}
        docker tag ${{ needs.setup.outputs.dev_img_name }}:${{ needs.setup.outputs.img_tag }} ${{ needs.setup.outputs.dev_gh_registry }}
        parallel 'docker push {}' ::: ${{ needs.setup.outputs.env_gh_registry }} ${{ needs.setup.outputs.dev_gh_registry }}
